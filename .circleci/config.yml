version: 2.1
orbs:
  go: circleci/go@1.5.0
  slack: circleci/slack@4.10.1

jobs:
  # This job builds the hive executable and stores it in the workspace.
  build:
    docker:
      - image: cimg/go:1.18
    steps:
      # Build it.
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: {command: "go build ."}
      # Store the executable.
      - persist_to_workspace:
          root: .
          paths: ["hive"]

  # We run hive once without any simulators to build the client images, which can then be reused in all test jobs.
  hive-clients-build:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - attach_workspace: { at: "/tmp/build" }
      - run:
          name: Build hive client docker images
          command: "/tmp/build/hive -client=go-ethereum,op-geth,op-proposer,op-batcher,op-node,op-contracts"
      - run:
          name: Save hive client docker images
          command: |
            printf "Saving docker images\n"
            mkdir -p /tmp/build/hive-clients
            clients=(
              "go-ethereum"
              "op-geth"
              "op-proposer"
              "op-batcher"
              "op-node"
              "op-contracts"
            )
            for cl in clients; do
               docker save -o "/tmp/build/hive-clients/$cl" hive/clients/$cl
            done
      - persist_to_workspace:
          root: "/tmp/build"
          paths: [ "hive-clients" ]

  # The below hive-*-tests jobs runs the optimism test simulations. This requires a virtual
  # machine instead of the container-based build environment because hive needs
  # to be able to talk to the docker containers it creates.

  hive-rpc-tests:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - attach_workspace: {at: "/tmp/build"}
      - run: &load_client_docker_images
          name: Load hive clients
          command: |
            printf "Loading client docker images\n"
            clients=(
              "go-ethereum"
              "op-geth"
              "op-proposer"
              "op-batcher"
              "op-node"
              "op-contracts"
            )
            for cl in clients; do
               docker load -i "/tmp/build/hive-clients/$cl"
            done
      - run:
          command: "/tmp/build/hive -sim=optimism/rpc -sim.loglevel=5 -client=go-ethereum,op-geth,op-proposer,op-batcher,op-node,op-contracts |& tee /tmp/build/hive-rpc.log"
      - run:
          command: "! grep 'pass.*=false' /tmp/build/hive-rpc.log"
      - slack/notify:
          channel: C03N11M0BBN
          event: fail
          template: basic_fail_1
      - slack/notify:
          channel: C03N11M0BBN
          event: pass
          template: basic_success_1

  hive-testnet-tests:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - attach_workspace: {at: "/tmp/build"}
      - run: *load_client_docker_images
      - run:
          command: "/tmp/build/hive -sim=optimism/testnet -sim.loglevel=5 -client=go-ethereum,op-geth,op-proposer,op-batcher,op-node,op-contracts |& tee /tmp/build/hive-testnet.log"
      - run:
          command: "! grep 'pass.*=false' /tmp/build/hive-testnet.log"
      - slack/notify:
          channel: C03N11M0BBN
          event: fail
          template: basic_fail_1
      - slack/notify:
          channel: C03N11M0BBN
          event: pass
          template: basic_success_1

  hive-p2p-tests:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - attach_workspace: {at: "/tmp/build"}
      - run: *load_client_docker_images
      - run:
          command: "/tmp/build/hive -sim=optimism/p2p -sim.loglevel=5 -client=go-ethereum,op-geth,op-proposer,op-batcher,op-node,op-contracts |& tee /tmp/build/hive-p2p.log"
      - run:
          command: "! grep 'pass.*=false' /tmp/build/hive-p2p.log"
      - slack/notify:
          channel: C03N11M0BBN
          event: fail
          template: basic_fail_1
      - slack/notify:
          channel: C03N11M0BBN
          event: pass
          template: basic_success_1

  # This job runs the go unit tests.
  go-test:
    docker:
      - image: cimg/go:1.18
    steps:
      # Get the source.
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      # Run the tests.
      - run:
          name: "hive module tests"
          command: "go test -cover ./..."
      - run:
          name: "hiveproxy module tests"
          command: "go test -cover ./..."
          working_directory: "./hiveproxy"
# some upstream simulators are broken, don't use latest, geth, etc.
#      - run:
#          name: "Compile Go simulators"
#          command: ".circleci/compile-simulators.sh"

workflows:
  main:
    jobs:
      - go-test
      - build
      - hive-clients-build:
          requires: ["build"]
      - hive-rpc-tests:
          requires: ["hive-clients-build"]
          context: slack
      - hive-testnet-tests:
          requires: ["hive-clients-build"]
          context: slack
      - hive-p2p-tests:
          requires: ["hive-clients-build"]
          context: slack
